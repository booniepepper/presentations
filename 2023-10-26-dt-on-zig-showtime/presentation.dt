#!/usr/bin/env -S rlwrap dt

# Slides

[ [ "dt"
    "duct tape for your unix pipes"
  ]
  [ "j.r. \"boonie pepper\" hill"
    "proglang enthusiast"
    "carpenter and roofer"
    "amateur woodworker"
    "plucky with instruments"
    "2x girl dad"
    "spice lover"
  ]
  [ "professionally..."
    "software handyman"
    "9 years in amazon/aws"
    "now: openfga polyglot sdks"
    "past: general contracting, roofing, realty, more"
    "future: ???"
  ]
  [ "what's dt?"
    "one-liner language"
    ""
    "TODO: demo prompt"
  ]
  [ "primary inspirations"
    "catlangs: forth, factor, joy, min"
    "text utils: awk, sed, xargs, jq, shells"
    "oneliners: ruby, python, perl, raku"
    "other: tcl, haskell, common lisp, basic"
  ]
  [ "dt goals"
    "aspirations are to be..."
    "------------------------"
    "a more-general awk"
    "a jq/yq/xq for text"
    "forth/joy/factor for sysadmins"
    "building block for large ecosystems"
  ]
  [ "TODO"
    "write presentation... lol"
  ]
  [ "ayy lmao"
    "kthxbai"
  ]
] \slides:

# Presentation stuff. Assumes classic 80x24 terminal.

[2 /] \halve def

[ \line:
  80 line len - halve \lpad:
  line [" " push] lpad times
  rev "" join
] \centered def

[ \screen:
  screen deq [title content]:
  \nl 5 times
  title green centered pl
  \nl 2 times
  content norm [centered pl] each
  [nl] 16 screen len - times
] \show-screen def

[ \n:
  slides len \slidelen:
  [ red "ERR: There are only " p slidelen p " slides" pl norm
  ] slidelen n lt? do?
  slides rev [pop drop] n 1 - times
  last
] \nth-slide def

[ \n:
  n nth-slide show-screen
  n
] \print-slide def

[ quote-all drop 1 print-slide ] \restart def
[ \nl 23 times ] \clear def
[ 1 + print-slide ] \next def
[ 1 - print-slide ] \prev def

# let's gooooooooooooo

restart repl
